#!bash
# Copyright 2020 The SQLFlow Authors. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

docker >/dev/null 2>&1
if [[ $? != 0 ]]; then
  echo "Install Docker(https://docs.docker.com/get-docker/) on your local host machine to use SQLFlow command line."
  exit 1
fi
set -e
if [[ $(docker images | grep -w '^sqlflow/sqlflow *latest') == "" ]]; then
  echo "Pulling the Docker image of sqlflow"
  docker pull sqlflow/sqlflow:latest
fi
SQLFLOW_HISTORY_FILE=$HOME/.sqlflow_history
SQLFLOW_DOTENV_FILE=$HOME/.sqlflow_env
touch $SQLFLOW_HISTORY_FILE $SQLFLOW_DOTENV_FILE
VARG="-v $SQLFLOW_HISTORY_FILE:/root/.sqlflow_history -v $SQLFLOW_DOTENV_FILE:/root/.sqlflow_env"
while (( "$#" )); do
  case "$1" in
    -f|--file)
      if [[ -e "$2" ]]; then
        FN=$(realpath -- $2)
        VARG="$VARG -v $FN:/root/input.sql"
        PARAMS="$PARAMS $1 /root/input.sql"
        shift 2
      elif [[ "$2" == -* ||  "$2" == "" ]]; then
        echo "sqlflow: flag needs an argument: $1"
        exit 1
      else
        echo "sqlflow: $2: No such file or directory"
        exit 1
      fi
      ;;
    -f=*|--file=*)
      FN=$(echo $1|cut -d=  -f2)
      if [[ -e "$FN" ]]; then
        FN=$(realpath -- $FN)
        VARG="$VARG -v $FN:/root/input.sql"
        PARAMS="$PARAMS -f /root/input.sql"
        shift 1
      else
        echo "sqlflow: $2: No such file or directory"
        exit 1
      fi
      ;;
    --datasource)
      if [[ "$2" == -* ||  "$2" == "" ]]; then
        echo "sqlflow: flag needs an argument: $1"
        exit 1
      fi
      DATASOURCE=${2//127.0.0.1/host.docker.internal}
      DATASOURCE=${DATASOURCE//localhost/host.docker.internal}
      PARAMS="$PARAMS $1 $DATASOURCE" 
      shift 2
      ;;
    --datasource=*)
      PARAM=${1//127.0.0.1/host.docker.internal}
      PARAM=${PARAM//localhost/host.docker.internal}
      PARAMS="$PARAMS $PARAM" 
      shift 1
      ;;
    *)
      PARAMS="$PARAMS $1"
      shift
  esac
done
set +e
docker create -v /var/lib/mysql --name mysqlflowdata sqlflow/sqlflow 2>/dev/null
if [[ $? == 0 ]]; then
  echo "MySQL volume created"
fi
set -e
docker run --name sqlflow --rm -it $VARG --volumes-from mysqlflowdata sqlflow/sqlflow /start.sh repl $PARAMS
